$spacing: 10px;
$circleSize: 200px;
$themeColor: #B696FF;
$backColor: #DCCFFA;
$textShadow: rgba(black, 0.35) 1px 1px 1px;

.exam-component {
    display: flex;
    flex-direction: row;
    width: 100vw;
    height: auto;
    align-items: flex-start;
    justify-content: center;
    padding: 20px;
    font-size: 16px;
    transition: all 300ms;

    .section {
        padding: 0;
        .item {
            font-size: inherit;

            &.pill {
                background: white;
                padding: 5px 20px;
                border-radius: 23px;
                font-size: 14px;
                margin-bottom: 10px;
                text-transform: uppercase;
                font-weight: bold;
                color: black;
            }
            &.exam-title {
                color: #250080;
                font-size: 24px;
                margin-bottom: 10px;
            }

            &.exam-questions {
                margin-top: 10px;
            }
        }

        &.score,  &.score-details {
            width: 100%;
            background: #E4D7FF;
            display: flex;
            flex-direction: column;
            align-items: center;
            flex-wrap: nowrap;
            padding: 30px;
            color: #250080;
        }
        &.score-details {
            background: white;

            .item {
                margin-bottom: 20px;
                &.actions {
                    gap: 15px;
                    display: flex;
                }
            }
        }
    }

    &.score-screen {
        padding: 0;
        background: transparent;
        .frame { width: 100%; }
    }

    .quiz-body {
        box-shadow: 0 0 10px gray;
        width: 80vw;
        max-height: calc(100vh - 150px);
        overflow: auto;
        display: unset;
        padding: 30px;
        border-radius: 11px;
        background: white;

        .row {
            margin-bottom: 30px;

            &.whioutMargin {
                margin-bottom: 0;
            }
        }

        .column {
            .question-section {
                margin-bottom: 40px;
            }
        }
    }

    .label {
        &.time {
            font-weight: bold;
        }
    }

    .question {
        margin-bottom: 20px;
    }

    .question-options {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: stretch;
        justify-content: center;
        align-content: center;
        gap: 15px;

        .option {
            max-width: 50%;
            width: calc(50% - 15px);
            background: white;
            border: 1px solid #ababab;
            margin: 0px 0px 10px 0;
            border-radius: 10px;
            padding: 8px;
            padding-left: 15px;
            transition: all 300ms;
            display: flex;
            position: relative;
            // padding-left: 35px;
            align-items: center;
            justify-content: flex-start;
            font-size: 12px;

            .index {
                color: #676767;
                padding: 0;
                position: absolute;
                left: -10px;
                top: 30%;
                background: #cbcbcb;
                height: 20px;
                width: 20px;
                border-radius: 10px;
                font-weight: bold;
                font-size: 14px;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            &:hover {
                background: #f5f5f5;
                box-shadow: 0 0 5px gray;
            }

            &.selected {
                background: #dfdfdf;
            }

            &.correct {
                background: #d0f1d4;
                border-color: #8bc34a;
            }

            &.incorrect {
                background: #f5cfcf;
                border-color: #f58686;
            }
        }

    }

    .float-footer {
        position: fixed;
        bottom: 0;
        width: 100%;
        margin-left: -30px;
        margin-right: -30px;
        margin-bottom: 0;
        min-height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
    }




    .progress--circle {
        position: relative;
        display: inline-block;
        margin: $spacing;
        width: $circleSize;
        height: $circleSize;
        border-radius: 50%;
        background-color: $backColor;

        &:before {
          content: '';
          position: absolute;
          top: 5px;
          left: 5px;
          width: #{$circleSize - 10px};
          height: #{$circleSize - 10px};
          border-radius: 50%;
          background-color: $backColor;
          
        }
        &:after {
          content: '';
          display: inline-block;
          width: 100%;
          height: 100%;
          border-radius: 50%; 
          background-color: $themeColor;
        }
      }
      
      .progress__number {
        position: absolute;
        top: calc(30px / 2);
        left: 0;
        right: 0;
        height: #{$circleSize - 30px};
        width: #{$circleSize - 30px};
        line-height: 1;
        border-radius: 50%;
        text-align: center;
        font-size: 30px;
        font-weight: bold;
        color: #777;
        background: white;
        margin: 0 auto;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;

        .progress__number_label {
            font-size: 12px;
        }
      }
      
}


/**
* $step is set to 5 by default, meaning you can only use percentage classes in increments of five (e.g. 25, 30, 45, 50, and so on). This helps to reduce the size of the final CSS file. If you need a number that doesn't end in 0 or 5, you can change the text percentage while rounding the class up/down to the nearest 5.
*/

$step: 5;
$loops: round(100 / $step);
$increment: 360 / $loops;
$half: round($loops / 2);
@for $i from 0 through $loops {
  .progress--bar.progress--#{$i * $step}:after {
    width: $i * $step * 1%;
  }
  .progress--circle.progress--#{$i * $step}:after {
    @if $i < $half {
      $nextDeg: 90deg + ($increment * $i);
      background-image: linear-gradient(90deg, $backColor 50%, transparent 50%, transparent), linear-gradient($nextDeg, $themeColor 50%, $backColor 50%, $backColor);
    }
    @else {
      $nextDeg: -90deg + ($increment * ($i - $half));
      background-image: linear-gradient($nextDeg, $themeColor 50%, transparent 50%, transparent), linear-gradient(270deg, $themeColor 50%, $backColor 50%, $backColor);
    }
  }
}