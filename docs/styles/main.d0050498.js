class l{constructor(){this.fileData="/exam-tests/data/questions-db.md"}async getRawData(t){const e=await this.getDataFromFile();return t&&t(e),e}getDataFromFile(){return new Promise((t,e)=>{fetch(this.fileData).then(a=>a.text()).then(a=>t(a)).catch(a=>{console.log("err: ",a),t(null)})})}}class o{constructor(t){this.CONTEXT="exam",t&&(this.CONTEXT=t)}get(){const t=localStorage.getItem(this.CONTEXT);return t?JSON.parse(t):null}save(t,e){e=e||this.CONTEXT,localStorage.setItem(e,JSON.stringify(t))}clear(t){t=t||this.CONTEXT,localStorage.removeItem(t)}clearAll(){localStorage.clear()}}class r{constructor(){this.storage=new o("exam"),this.services=new l}init(){let t=this.storage.get();console.log("val: ",t),t||(this.storage.save({user:"test",role:"test"}),t=this.storage.get(),console.log("val: ",t)),this.services.getRawData(a=>{}),$(".ui.modal").modal("setting","closable",!1).modal("show")}}export{r as A};
